{
  "openapi": "3.0.0",
  "info": {
    "description": "User Data ManageMent swagger",
    "version": "1.0",
    "title": "User Data ManageMent",
    "contact": {
      "email": "shankha.shuvro@hotmail.com"
    }
  },
  "security": [
    {
      "Authorization_token": []
    },
    {
      "Organization_name": []
    },
    {
      "user_id": []
    },
    {
      "Offline-Token": []
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Create new user",
        "description": "",
        "operationId": "createuser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Users.create.input"
              }
            }
          },
          "description": "Create new cluster",
          "required": true
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Users.create.response"
                },
                "example": {
                  "user_id": "5e430c5aa77ab8f674cc86b1",
                  "message": "new user created"
                }
              }
            }
          },
          "400": {
            "description": "Failure"
          },
          "500": {
            "description": "User already present"
          }
        }
      },
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get all users",
        "description": "Get one or more users based on given filter criteria",
        "operationId": "Getusers",
        "parameters": [
          {
            "$ref": "#/components/parameters/offsetParam"
          },
          {
            "$ref": "#/components/parameters/limitParam"
          },
          {
            "$ref": "#/components/parameters/name"
          },
          {
            "$ref": "#/components/parameters/sort"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersGetAll"
                }
              }
            }
          },
          "400": {
            "description": "Failure"
          }
        }
      }
    },
    "/users/{users_id}": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get the details of user",
        "description": "",
        "operationId": "UserDetails",
        "parameters": [
          {
            "in": "path",
            "name": "users_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "examples": {
                  "success": {
                    "summary": "Example of a successful response",
                    "value": {
                      "id": 10234,
                      "first_name": "fn2",
                      "last_name": "ln3",
                      "company_name": "Benton, John B Jr",
                      "city": "New Orleans",
                      "state": "LA",
                      "zip": 70116,
                      "email": "jbutt@gmail.com",
                      "web": "http://www.bentonjohnbjr.com",
                      "age": 89
                    }
                  },
                  "error": {
                    "summary": "Example of an unsuccessful response",
                    "description": "No user with this ID is present",
                    "value": {
                      "message": "no users found"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Failure"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete the user by ID",
        "description": "",
        "operationId": "delete User",
        "parameters": [
          {
            "in": "path",
            "name": "users_id",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteResponse"
                },
                "example": {
                  "message": "1 user deleted"
                }
              }
            }
          },
          "400": {
            "description": "No user with this ID is present"
          }
        }
      },
      "put": {
        "tags": [
          "users"
        ],
        "summary": "Update user data",
        "description": "",
        "operationId": "user update",
        "parameters": [
          {
            "in": "path",
            "name": "users_id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "age": {
                    "type": "integer"
                  }
                },
                "example": {
                  "first_name": "Josephine",
                  "last_name": "Darakjy",
                  "age": 48
                }
              }
            }
          },
          "description": "update userr",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "success": {
                    "summary": "Example of a successful response",
                    "value": {
                      "first_name": "fn2",
                      "last_name": "ln3",
                      "age": 89
                    }
                  },
                  "error": {
                    "summary": "Example of an unsuccessful response",
                    "description": "No Updates Happend",
                    "value": {
                      "message": "no user updated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid user"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:8081/peace/v1/api",
      "description": "localhost"
    }
  ],
  "components": {
    "parameters": {
      "offsetParam": {
        "in": "query",
        "name": "page",
        "required": true,
        "description": "The number of items to skip before starting to collect the result set.",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      },
      "limitParam": {
        "in": "query",
        "name": "limit",
        "required": false,
        "description": "The numbers of items to return.",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 5
        }
      },
      "name": {
        "in": "query",
        "name": "name",
        "description": "search user by name as a substring in First Name or Last Name",
        "required": false,
        "schema": {
          "type": "string",
          "example": "James"
        }
      },
      "sort": {
        "in": "query",
        "name": "sort",
        "description": "name of attribute, the items to be sorted. By default it returns items in ascending order if  this parameter exist, and if the value of parameter is prefixed with ‘-’ character, then it should return items in descending order",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "age",
            "-age",
            "id",
            "-id",
            "zip",
            "-zip"
          ]
        }
      }
    },
    "securitySchemes": {
      "Authorization_token": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "Provide the Auth 2.0 token from keycloak, format - Bearer"
      }
    },
    "schemas": {
      "Users.create.input": {
        "type": "object",
        "required": [
          "id",
          "first_name",
          "email"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "company_name": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip": {
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "web": {
            "type": "string"
          },
          "age": {
            "type": "integer"
          }
        },
        "example": {
          "id": 10234,
          "first_name": "fn2",
          "last_name": "ln3",
          "company_name": "Benton, John B Jr",
          "city": "New Orleans",
          "state": "LA",
          "zip": 70116,
          "email": "jbutt@gmail.com",
          "web": "http://www.bentonjohnbjr.com",
          "age": 89
        },
        "xml": {
          "name": "User"
        }
      },
      "Users.create.response": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "xml": {
          "name": "UserResultResponse"
        }
      },
      "UsersGetAll": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 10
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Users.create.input"
            }
          }
        }
      },
      "DeleteResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "xml": {
          "name": "DeleteResponse"
        }
      }
    }
  }
}